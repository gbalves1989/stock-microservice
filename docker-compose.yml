services:
  # gateway da aplicação
  kong:
    image: kong:latest
    env_file:
      - ./.env
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:${KONG_ADMIN_PORT}
    volumes:
      - ./configurations/kong/kong.yml:/usr/local/kong/kong.yml
    ports:
      - "${KONG_PROXY_PORT}:8000"
      - "${KONG_ADMIN_PORT}:8001"
    expose:
      - "${KONG_PROXY_PORT}"
      - "${KONG_ADMIN_PORT}"
    depends_on:
      - user-microservice
    networks:
      - stock_microservice_network
  
  # databases
  user-mongo:
    image: mongo:5
    env_file:
      - ./.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "${MONGO_PORT}:27017"
    expose:
      - "${MONGO_PORT}"
    volumes:
      - ./.docker/user_mongo_data:/data/db
    networks:
      - stock_microservice_network

  # microservices
  user-microservice:
    build: ./user-microservice
    expose:
      - "7000"
    env_file:
      - ./.env
    environment:
      - DATABASE_URL="${USER_DATABASE_URL}"
    depends_on:
      - user-mongo
    networks:
      - stock_microservice_network

volumes:
  user_mongo_data:

networks:
  stock_microservice_network:
    driver: bridge
